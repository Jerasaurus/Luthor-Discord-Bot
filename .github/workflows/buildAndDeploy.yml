name: Discord Bot CD

on:
  push:
    branches: [master]
jobs:
  buildAndDeployment:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: "Checkout branch"
        uses: actions/checkout@master
      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run build

      - name: List output files
        run: ls

      - name: Postbuild
        run: mkdir -p build/dist
      - run: cp -r dist/ build/
      - run: cp package.json build/package.json
      - run: cp package-lock.json build/package-lock.json


      - name: Create upload directory
        run: mkdir -p upload
      - name: Zip files
        run: tar -zcf upload/result.tar.gz -C build .

      # - name: Deploy (stop server)
      #   uses: fjogeleit/http-request-action@v1
      #   with:
      #     url: ${{ secrets.API_ENDPOINT }}
      #     method: 'POST'
      #     customHeaders: '{"Content-Type": "application/json", "Authorization": "Bearer ${{ secrets.API_KEY }}"}'
      #     data: '{"signal":"stop"}'

      # - name: SFTP Deploy
      #   uses: wlixcc/SFTP-Deploy-Action@v1.2.2
      #   with:
      #     server: ${{ secrets.FTP_SERVER }}
      #     port: ${{ secrets.FTP_PORT }}
      #     username: ${{ secrets.FTP_USERNAME }}
      #     ftp_password: ${{ secrets.FTP_PASSWORD }}
      #     ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} 
      #     local_source_dir: "upload/"
      #     dist_target_dir: "/"
      #     delete: "true"
      #     exclude: "'.env'"        

          
      - name: 'Deploy(1/2): Copy dist)'
        uses: SamKirkland/FTP-Deploy-Action@2.0.0
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          LOCAL_DIR: upload/
          SERVER_DIR: ./
          LOG-LEVEL: minimal
          METHOD: sftp
          PORT: ${{ secrets.FTP_PORT }}
          ARGS: --delete
          exclude: |
            .env

      - name: Deploy (1/2)
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.API_ENDPOINT2 }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Authorization": "Bearer ${{ secrets.API_KEY }}"}'
          data: '{"root":"/","file":"result.tar.gz"}'        
      - name: Deploy (2/2)
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.API_ENDPOINT }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Authorization": "Bearer ${{ secrets.API_KEY }}"}'
          data: '{"signal":"restart"}'   