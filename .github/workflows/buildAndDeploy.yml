name: Discord Bot CD

on:
  workflow_dispatch:
    branches:
      - master
  push:
    branches: [master]
jobs:
  buildAndDeployment:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: "Checkout branch"
        uses: actions/checkout@master
      - name: Build
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run build

      - name: List output files
        run: ls

      - name: Postbuild
        run: mkdir -p build/dist
      - run: cp -r dist/ build/
      - run: cp package.json build/package.json
      - run: cp package-lock.json build/package-lock.json


      - name: Create upload directory
        run: mkdir -p upload
      - name: Zip files
        run: tar -zcf upload/result.tar.gz -C build .

      - name: Deploy/Upload
        env:
          REDELINUX_PASS: ${{ secrets.FTP_PASSWORD }}
          REDELINUX_USER: ${{ secrets.FTP_USERNAME }}
          REDELINUX_HOST: ${{ secrets.FTP_SERVER }}
          REDELINUX_PATH: /
        run: |
          sshpass -p "$REDELINUX_PASS" rsync --progress -azr --exclude=".env" "ssh -o StrictHostKeyChecking=no" public/* "$REDELINUX_USER@$REDELINUX_HOST:$REDELINUX_PATH"
      - name: Deploy (1/3)
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.API_ENDPOINT2 }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Authorization": "Bearer ${{ secrets.API_KEY }}"}'
          data: '{"root":"/","file":"result.tar.gz"}'
          excludeMode: 'ignore'
          exclude: |
            .env

      # - name: Deploy (2/3)
      #   uses: fjogeleit/http-request-action@v1
      #   with:
      #     url: ${{ secrets.API_ENDPOINT3 }}
      #     method: 'POST'
      #     customHeaders: '{"Content-Type": "application/json", "Authorization": "Bearer ${{ secrets.API_KEY }}"}'
      #     data: '{{server.build.env.envVAR}}'    

      - name: Deploy (3/3)
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.API_ENDPOINT }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json", "Authorization": "Bearer ${{ secrets.API_KEY }}"}'
          data: '{"signal":"restart"}'   


      # - name: Deploy (stop server)
      #   uses: fjogeleit/http-request-action@v1
      #   with:
      #     url: ${{ secrets.API_ENDPOINT }}
      #     method: 'POST'
      #     customHeaders: '{"Content-Type": "application/json", "Authorization": "Bearer ${{ secrets.API_KEY }}"}'
      #     data: '{"signal":"stop"}'

      # - name: SFTP Deploy
      #   uses: wlixcc/SFTP-Deploy-Action@v1.2.2
      #   with:
      #     server: ${{ secrets.FTP_SERVER }}
      #     port: ${{ secrets.FTP_PORT }}
      #     username: ${{ secrets.FTP_USERNAME }}
      #     ftp_password: ${{ secrets.FTP_PASSWORD }}
      #     ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }} 
      #     local_source_dir: "upload/"
      #     dist_target_dir: "/"
      #     delete: "true"
      #     exclude: "'.env'"    

        # - name      
      # - name: Rsync Deployments Action
      #   uses: Burnett01/rsync-deployments@5.2    
      #   with:
      #     switches: -avzr --exclude=".env" --delete
      #     path: upload/
      #     remote_path: /
      #     remote_host: ${{ secrets.FTP_SERVER }}
      #     remote_user: ${{ secrets.FTP_USERNAME }}
      #     remote_key: ${{ secrets.SSH_KEY }}
      #     remote_port: ${{ secrets.FTP_PORT }}
      # - name: SFTP uploader
      #   uses: SamKirkland/web-deploy@1.0.0
      #   with:
      #     target-server: ${{ secrets.FTP_SERVER }}
      #     remote-user: ${{ secrets.FTP_USERNAME }}
      #     remote-key: ${{ secrets.SSH_KEY }}
      #     source-path: upload/
      #     destination-path: /
      #     rsync-options: --delete --exclude=".env"
      # - name: FTP Deploy
      #   uses: SamKirkland/FTP-Deploy-Action@4.3.0
      #   env:
      #     server: ${{ secrets.FTP_SERVER }}
      #     method: sftp
      #     username: ${{ secrets.FTP_USERNAME }}
      #     password: ${{ secrets.FTP_PASSWORD }}
      #     local-dir: upload/
      #     server-dir: ./
      #     log-level: verbose
      #     port: ${{ secrets.FTP_PORT }}
      #     ARGS: --delete
      #     exclude: |
      #       .env